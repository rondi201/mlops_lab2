"""Init migration

Revision ID: 30a89b31c7a7
Revises: 
Create Date: 2025-08-19 19:00:42.569967

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '30a89b31c7a7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('predict_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('datasets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('target_column', sa.String(length=50), nullable=False),
    sa.Column('index_column', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['predict_tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_datasets_name'), 'datasets', ['name'], unique=True)
    op.create_table('mlmodels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('trained_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('trained_at')
    )
    op.create_index(op.f('ix_mlmodels_name'), 'mlmodels', ['name'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_mlmodels_name'), table_name='mlmodels')
    op.drop_table('mlmodels')
    op.drop_index(op.f('ix_datasets_name'), table_name='datasets')
    op.drop_table('datasets')
    op.drop_table('predict_tasks')
    # ### end Alembic commands ###
